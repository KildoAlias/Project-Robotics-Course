#!/usr/bin/env python

import sys
import math

import rospy
import tf2_ros 
import tf2_geometry_msgs
from crazyflie_driver.msg import Hover
from aruco_msgs.msg import MarkerArray
from geometry_msgs.msg import PoseStamped

POSE = Hover()
SHUTDOWN = False
INITILIZED = False

def keyboard_callback(data):
    global POSE, INITILIZED
    INITILIZED = True
    POSE = data
    print(POSE)

def SHUTDOWN_callback(data):
    global POSE, SHUTDOWN
    POSE = data
    SHUTDOWN = True


def publish_cmd(POSE_to_pub):
    global POSE 
    pub_cmd.publish(POSE_to_pub)
    POSE = Hover()
    POSE.header.stamp = rospy.Time.now()
    POSE.vx = 0
    POSE.vy = 0
    POSE.yawrate = 0
    POSE.zDistance = POSE_to_pub.zDistance




rospy.init_node("hover")
rospy.Subscriber("ml1/keyboard", Hover, keyboard_callback)
rospy.Subscriber("ml1/SHUTDOWN", Hover, SHUTDOWN_callback)

pub_cmd  = rospy.Publisher('/cf1/cmd_hover', Hover, queue_size=2)



def main():
    print("STARTING...")
    rate = rospy.Rate(10)  # Hz
    while not rospy.is_shutdown():
        while not SHUTDOWN and INITILIZED:
            publish_cmd(POSE)
            rate.sleep()

        if SHUTDOWN:
            print("QUITING...")
            while POSE.zDistance > 0.15:
                POSE.zDistance -= 0.01
                publish_cmd(POSE)
                rospy.sleep(0.1)
            break
        
    




if __name__ == "__main__":
    main()